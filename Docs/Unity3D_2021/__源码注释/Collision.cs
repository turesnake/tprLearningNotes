#region 程序集 UnityEngine.PhysicsModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UnityEngine.PhysicsModule.dll
#endregion

using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;

namespace UnityEngine
{
    //
    // 摘要:
    //     Describes a collision.
    [RequiredByNativeCodeAttribute]
    public class Collision
    {
        public Collision();

        //
        // 摘要:
        //     The Rigidbody or ArticulationBody of the collider that your Component collides
        //     with (Read Only).
        public Component body { get; }

        // [EditorBrowsable(EditorBrowsableState.Never)]
        // [Obsolete("Use Collision.relativeVelocity instead. (UnityUpgradable) -> relativeVelocity", false)]
        // public Vector3 impactForceSum { get; }

        //
        // 摘要:
        //     The total impulse applied to this "contact pair" to resolve the collision.
        public Vector3 impulse { get; }

        //
        // 摘要:
        //     The contact points generated by the physics engine. You should avoid using this
        //     as it produces memory garbage. Use GetContact or GetContacts instead.
        public ContactPoint[] contacts { get; }

        //
        // 摘要:
        //     Gets the number of contacts for this collision.
        public int contactCount { get; }

        //
        // 摘要:
        //     The GameObject whose collider you are colliding with. (Read Only).
        public GameObject gameObject { get; }

        //
        // 摘要:
        //     The Transform of the object we hit (Read Only).
        public Transform transform { get; }

        //
        // 摘要:
        //     The Collider we hit (Read Only).
        public Collider collider { get; }

        // [EditorBrowsable(EditorBrowsableState.Never)]
        // [Obsolete("Please use Collision.rigidbody, Collision.transform or Collision.collider instead", false)]
        // public Component other { get; }

        //
        // 摘要:
        //     The ArticulationBody of the collider that your GameObject collides with (Read
        //     Only).
        public ArticulationBody articulationBody { get; }

        //
        // 摘要:
        //     The Rigidbody we hit (Read Only). This is null if the object we hit is a collider
        //     with no rigidbody attached.
        public Rigidbody rigidbody { get; }

        //
        // 摘要:
        //     The relative linear velocity of the two colliding objects (Read Only).
        public Vector3 relativeVelocity { get; }

        // [EditorBrowsable(EditorBrowsableState.Never)]
        // [Obsolete("Will always return zero.", true)]
        // public Vector3 frictionForceSum { get; }


        /*
                Gets the contact point at the specified index.
                通常用来在 for 循环中遍历 所有 接触点;
            
            参数:
            index:
                The index of the contact to retrieve.
            
            返回结果:
                The contact at the specified index.
        */
        public ContactPoint GetContact(int index);


        public int GetContacts(List<ContactPoint> contacts);

        //
        // 摘要:
        //     Retrieves all contact points for this collision.
        //
        // 参数:
        //   contacts:
        //     An array of ContactPoint used to receive the results.
        //
        // 返回结果:
        //     Returns the number of contacts placed in the contacts array.
        public int GetContacts(ContactPoint[] contacts);

        // [EditorBrowsable(EditorBrowsableState.Never)]
        // [Obsolete("Do not use Collision.GetEnumerator(), enumerate using non-allocating array returned by Collision.GetContacts() or enumerate using Collision.GetContact(index) instead.", false)]
        // public virtual IEnumerator GetEnumerator();

    }
}
